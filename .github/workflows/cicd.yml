name: CI/CD Pipeline for Tic-Tac-Toe

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'kubernetes/deployment.yml'  # Ignore changes to this file to prevent loops

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.MY_PAT }}  # Use a Personal Access Token (PAT) with write access

    # Step 2: Set up Node.js to build the React project
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # Step 3: Install dependencies and build the React app
    - name: Install Dependencies
      run: npm install

    - name: Build React App
      run: npm run build

    # Step 4: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    # Step 5: Build and push Docker image
    - name: Build and Push Docker Image
      id: docker-build
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: manish181623/tic-tac-toe:${{ github.sha }}

    # Step 6: Update Kubernetes deployment file
    - name: Update Kubernetes Deployment File
      env:
        IMAGE_TAG: ${{ github.sha }}
        DOCKER_REGISTRY: docker.io
        DOCKER_REPO: manish181623/tic-tac-toe
      run: |
        # Define the new image with tag
        NEW_IMAGE="${DOCKER_REGISTRY}/${DOCKER_REPO}:${IMAGE_TAG}"
        
        # Update the deployment file directly
        sed -i "s|image: .*|image: ${NEW_IMAGE}|g" kubernetes/deployment.yml
        
        # Verify the change
        echo "Updated deployment to use image: ${NEW_IMAGE}"
        grep -A 1 "image:" kubernetes/deployment.yml

    # Step 7: Commit and push changes
    - name: Commit and Push Changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

        # Add the updated deployment file
        git add kubernetes/deployment.yml

        # Commit the changes with [skip ci] to avoid triggering another workflow
        git commit -m "Update Kubernetes deployment with new image tag: ${{ github.sha }} [skip ci]" || echo "No changes to commit"

        # Push changes to the master branch
        git push origin master
      env:
        GITHUB_TOKEN: ${{ secrets.MY_PAT }}  # Use the same PAT for authentication